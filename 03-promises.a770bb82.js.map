{"mappings":"AAAeA,SAASC,cAAc,UAEtC,IAGIC,EACAC,EAJAC,EAAOJ,SAASC,cAAc,QAgClCG,EAAKC,iBAAiB,UA1BMC,IAC1BA,EAAEC,iBACFC,QAAQC,IAAI,gBACF,IAAL,IAAIC,EAAI,EAAIA,GAAK,EAAIA,EAAIN,EAAKO,OAAOC,MACxCJ,QAAQC,IAAI,oBACEN,EAATU,aAAY,KAuBrB,IAAuBC,EAAUC,EArBzBb,EADQ,IAANQ,EACMN,EAAKY,MAAMJ,MAEXR,EAAKa,KAAKL,OAmBHE,EAhBHJ,EAgBaK,EAhBVb,EAiBd,IAAIgB,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,CAAEL,SAAUA,EAAUE,MAAOD,IAErCK,EAAO,CAAEN,SAAUA,EAAUE,MAAOD,GAAQ,GAE7CA,EAAM,KAzBJU,MAAK,EAACX,SAAEA,EAAUE,MAAAU,MACjBlB,QAAQC,IAAI,uBAAqBK,QAAiBY,MAAU,IAE7DC,OAAM,EAACb,SAAEA,EAAUE,MAAAY,MAClBpB,QAAQC,IAAI,sBAAoBK,QAAec,MAAU,GACzD,GACH1B,GACCQ,IAAMN,EAAKO,OAAOC,OACpBiB,cAAc1B,E","sources":["src/js/03-promises.js"],"sourcesContent":["const button = document.querySelector('button');\n\nlet form = document.querySelector('form');\n\n// let position = 1;\nlet delay;\nlet id;\n\nconst quantityOfFnCalling = e => {\n  e.preventDefault();\n  console.log('до цикла фор');\n  for (let i = 1; (i += 1); i = form.amount.value) {\n    console.log('внутри цикла фор');\n    id = setInterval(() => {\n      if (i === 1) {\n        delay = form.delay.value;\n      } else {\n        delay = form.step.value;\n      }\n      // console.log(position);\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, delay);\n    if (i === form.amount.value) {\n      clearInterval(id);\n    }\n  }\n};\n\nform.addEventListener('submit', quantityOfFnCalling);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n}\n// else {\n//   position = setTimeout(() => {\n//     if (shouldResolve) {\n//       resolve();\n//     } else {\n//       reject();\n//     }\n//   }, step);\n// }\n"],"names":["document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$id","$47d4ff9957288465$var$form","addEventListener","e","preventDefault","console","log","i","amount","value","setInterval","position","delay3","delay","step","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","delay1","catch","delay2","clearInterval"],"version":3,"file":"03-promises.a770bb82.js.map"}