{"mappings":"AAAeA,SAASC,cAAc,UAEtC,IAEIC,EAFAC,EAAOH,SAASC,cAAc,QAI9BG,EAAW,EAuBfD,EAAKE,iBAAiB,UArBMC,IAC1BA,EAAEC,iBACF,IAAIC,EAAkBC,OAAON,EAAKO,MAAMC,OACpCC,EAAiBH,OAAON,EAAKU,KAAKF,OAEzBR,EAAKW,OAAOH,MACzB,IAAK,IAAII,EAAIP,EAAkBO,GAAKH,GAClCV,EAAQa,EACRC,YAAW,KAef,IAAuBC,EAAUC,EAd3Bd,GAAY,GAcKa,EAbH,C,SAAEb,E,MAAUF,GAcvB,IAAIiB,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCR,YAAW,KACLM,EACFF,EAAQ,CAAEK,SAAUR,EAAUP,MAAOQ,IAErCG,EAAO,CAAEI,SAAUR,EAAUP,MAAOQ,GAAQ,GAE7CA,EAAM,KAtBJQ,MAAK,EAAGD,SAAAE,EAAUjB,MAAAkB,MACjBC,QAAQC,IAAI,uBAAqBH,QAAiBC,MAAU,IAE7DG,OAAM,EAAGN,SAAAO,EAAUtB,MAAAuB,MAClBJ,QAAQC,IAAI,sBAAoBE,QAAeC,MAAU,GACzD,GACH/B,E","sources":["src/js/03-promises.js"],"sourcesContent":["const button = document.querySelector('button');\n\nlet form = document.querySelector('form');\n\nlet delay;\nlet id;\nlet position = 0;\n\nconst quantityOfFnCalling = e => {\n  e.preventDefault();\n  let delayValueInNum = Number(form.delay.value);\n  let stepValueInNum = Number(form.step.value);\n\n  let amount = form.amount.value;\n  for (let i = delayValueInNum; (i += stepValueInNum); i <= amount) {\n    delay = i;\n    setTimeout(() => {\n      position += 1;\n      createPromise({ position, delay })\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, delay);\n  }\n};\n\nform.addEventListener('submit', quantityOfFnCalling);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["document","querySelector","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$form","$47d4ff9957288465$var$position","addEventListener","e","preventDefault","delayValueInNum","Number","delay","value","stepValueInNum","step","amount","i","setTimeout","position3","delay3","Promise","resolve","reject","shouldResolve","Math","random","position","then","position1","delay1","console","log","catch","position2","delay2"],"version":3,"file":"03-promises.cbf1368c.js.map"}