{"mappings":"YAAeA,SAASC,cAAc,UAAtC,IAKIC,EACAC,EAJAC,EAAOJ,SAASC,cAAc,QAgClCG,EAAKC,iBAAiB,UA1BM,SAAAC,G,kBAIxBC,QAAQC,IAAI,oBACEL,EAATM,aAAY,WAuBrB,IAAuBC,EAAUC,EArBzBT,EADQ,IAANU,EACMR,EAAKS,MAAMC,MAEXV,EAAKW,KAAKD,OAmBHJ,EAhBHE,EAgBaD,EAhBVT,EAiBd,IAAIc,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEP,SAAUA,EAAUG,MAAOF,IAErCO,EAAO,CAAER,SAAUA,EAAUG,MAAOF,G,GAErCA,E,KAzBEY,MAAK,SAAAC,G,IAAGd,EAAQc,EAARd,SAAUe,EAAKD,EAALX,MACjBN,QAAQC,IAAI,uBAAwCkB,OAAfhB,EAAS,QAAYgB,OAAND,EAAM,M,IAE3DE,OAAM,SAAAH,G,IAAGd,EAAQc,EAARd,SAAUkB,EAAKJ,EAALX,MAClBN,QAAQC,IAAI,sBAAqCkB,OAAfhB,EAAS,QAAYgB,OAANE,EAAM,M,MAE1D1B,GACCU,IAAMR,EAAKyB,OAAOf,OACpBgB,cAAc3B,E,EApBlBG,EAAEyB,iBACFxB,QAAQC,IAAI,gBACZ,IAAK,IAAIwB,EAAI,EAAIA,GAAK,EAAIA,EAAI5B,EAAKyB,OAAOf,MAAKmB,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["const button = document.querySelector('button');\n\nlet form = document.querySelector('form');\n\n// let position = 1;\nlet delay;\nlet id;\n\nconst quantityOfFnCalling = e => {\n  e.preventDefault();\n  console.log('до цикла фор');\n  for (let i = 1; (i += 1); i = form.amount.value) {\n    console.log('внутри цикла фор');\n    id = setInterval(() => {\n      if (i === 1) {\n        delay = form.delay.value;\n      } else {\n        delay = form.step.value;\n      }\n      // console.log(position);\n      createPromise(i, delay)\n        .then(({ position, delay }) => {\n          console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, delay);\n    if (i === form.amount.value) {\n      clearInterval(id);\n    }\n  }\n};\n\nform.addEventListener('submit', quantityOfFnCalling);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n}\n// else {\n//   position = setTimeout(() => {\n//     if (shouldResolve) {\n//       resolve();\n//     } else {\n//       reject();\n//     }\n//   }, step);\n// }\n"],"names":["document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$id","$ce04d3a99e08e73b$var$form","addEventListener","e","console","log","setInterval","position","delay3","i","delay","value","step","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","delay1","concat","catch","delay2","amount","clearInterval","preventDefault","i1","_loop"],"version":3,"file":"03-promises.90bd2b7f.js.map"}